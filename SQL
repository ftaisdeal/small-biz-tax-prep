-- Transactions table with all fields including 1099 tracking
CREATE TABLE transactions (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    account_id INTEGER NOT NULL,
    transaction_date DATE NOT NULL,
    reference_number VARCHAR(50),
    payee_description TEXT,
    address_info VARCHAR(255),
    amount DECIMAL(10, 2) NOT NULL,
    vendor_id INTEGER,
    payment_type_1099_id INTEGER,
    is_1099_reportable BOOLEAN DEFAULT FALSE,
    tax_year INTEGER,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (account_id) REFERENCES accounts(id),
    FOREIGN KEY (vendor_id) REFERENCES vendors(id),
    FOREIGN KEY (payment_type_1099_id) REFERENCES payment_types_1099(id)
);

-- Transaction categories junction table
CREATE TABLE transaction_categories (
    transaction_id INTEGER,
    category_id INTEGER,
    PRIMARY KEY (transaction_id, category_id),
    FOREIGN KEY (transaction_id) REFERENCES transactions(id),
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

-- Accounts table
CREATE TABLE accounts (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    account_type VARCHAR(20) NOT NULL,
    account_name VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



-- Vendors/Contractors table for 1099 tracking
CREATE TABLE vendors (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    vendor_name VARCHAR(255) NOT NULL,
    business_name VARCHAR(255),
    tax_id VARCHAR(20), -- SSN or EIN
    address_line1 VARCHAR(255),
    address_line2 VARCHAR(255),
    city VARCHAR(100),
    state VARCHAR(50),
    zip_code VARCHAR(20),
    email VARCHAR(255),
    phone VARCHAR(20),
    requires_1099 BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 1099 Payment Types table
CREATE TABLE payment_types_1099 (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    box_number VARCHAR(10) NOT NULL, -- e.g., '1', '2', '3', '7'
    description VARCHAR(255) NOT NULL, -- e.g., 'Nonemployee Compensation', 'Rent'
    form_type VARCHAR(20) DEFAULT '1099-NEC' -- 1099-NEC, 1099-MISC, etc.
);

-- Categories table for expense categorization
CREATE TABLE categories (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(100) NOT NULL,
    parent_category_id INTEGER,
    FOREIGN KEY (parent_category_id) REFERENCES categories(id)
);

-- 1099 Summary View for easy reporting
CREATE VIEW v_1099_summary AS
SELECT 
    v.id as vendor_id,
    v.vendor_name,
    v.business_name,
    v.tax_id,
    t.tax_year,
    pt.box_number,
    pt.description as payment_type_description,
    pt.form_type,
    SUM(ABS(t.amount)) as total_amount,
    COUNT(t.id) as transaction_count
FROM vendors v
JOIN transactions t ON v.id = t.vendor_id
JOIN payment_types_1099 pt ON t.payment_type_1099_id = pt.id
WHERE t.is_1099_reportable = TRUE
  AND t.amount < 0  -- Only outgoing payments
GROUP BY v.id, t.tax_year, pt.id
HAVING total_amount >= 600; -- IRS threshold for 1099-NEC

-- Query to get 1099-NEC reportable amounts for a specific tax year
CREATE VIEW v_1099_nec_report AS
SELECT 
    v.vendor_name,
    v.business_name,
    v.tax_id,
    v.address_line1,
    v.address_line2,
    v.city,
    v.state,
    v.zip_code,
    t.tax_year,
    SUM(ABS(t.amount)) as box_1_amount -- Nonemployee compensation
FROM vendors v
JOIN transactions t ON v.id = t.vendor_id
JOIN payment_types_1099 pt ON t.payment_type_1099_id = pt.id
WHERE t.is_1099_reportable = TRUE
  AND pt.form_type = '1099-NEC'
  AND pt.box_number = '1'
  AND t.amount < 0
GROUP BY v.id, t.tax_year
HAVING box_1_amount >= 600
ORDER BY v.vendor_name, t.tax_year;

-- Insert common 1099 payment types
INSERT INTO payment_types_1099 (box_number, description, form_type) VALUES
('1', 'Nonemployee Compensation', '1099-NEC'),
('1', 'Rents', '1099-MISC'),
('2', 'Royalties', '1099-MISC'),
('3', 'Other Income', '1099-MISC'),
('4', 'Federal Income Tax Withheld', '1099-MISC'),
('5', 'Fishing Boat Proceeds', '1099-MISC'),
('6', 'Medical and Health Care Payments', '1099-MISC'),
('7', 'Nonemployee Compensation (prior to 2020)', '1099-MISC'),
('8', 'Substitute Payments in Lieu of Dividends or Interest', '1099-MISC'),
('10', 'Crop Insurance Proceeds', '1099-MISC'),
('14', 'Gross Proceeds Paid to an Attorney', '1099-MISC');

-- Indexes for performance
CREATE INDEX idx_vendors_tax_id ON vendors(tax_id);
CREATE INDEX idx_vendors_requires_1099 ON vendors(requires_1099);
CREATE INDEX idx_transactions_vendor_id ON transactions(vendor_id);
CREATE INDEX idx_transactions_1099_reportable ON transactions(is_1099_reportable);
CREATE INDEX idx_transactions_tax_year ON transactions(tax_year);

-- Sample queries for 1099 calculations:

-- 1. Find all vendors who need 1099s for a specific year
-- SELECT * FROM v_1099_nec_report WHERE tax_year = 2024;

-- 2. Get total payments to a specific vendor for a tax year
-- SELECT vendor_name, SUM(ABS(amount)) as total_paid
-- FROM transactions t
-- JOIN vendors v ON t.vendor_id = v.id
-- WHERE v.vendor_name LIKE '%contractor_name%' 
--   AND t.tax_year = 2024 
--   AND t.is_1099_reportable = TRUE
--   AND t.amount < 0;

-- 3. Find vendors approaching the $600 threshold
-- SELECT v.vendor_name, SUM(ABS(t.amount)) as total_paid
-- FROM vendors v
-- JOIN transactions t ON v.id = t.vendor_id
-- WHERE t.is_1099_reportable = TRUE 
--   AND t.tax_year = 2024
--   AND t.amount < 0
-- GROUP BY v.id
-- HAVING total_paid >= 500 AND total_paid < 600;

-- 4. Monthly payment summary for a vendor
-- SELECT 
--     strftime('%Y-%m', t.transaction_date) as month,
--     SUM(ABS(t.amount)) as monthly_total
-- FROM transactions t
-- JOIN vendors v ON t.vendor_id = v.id
-- WHERE v.vendor_name = 'Contractor Name'
--   AND t.tax_year = 2024
--   AND t.is_1099_reportable = TRUE
--   AND t.amount < 0
-- GROUP BY month
-- ORDER BY month;